# Some fancy extended aliases that are only meant for local machines.
# Written by Tiger Sachse.

layout() {
  if [ $# -eq 0 ]; then
    return
  elif [ $# -eq 1 ]; then
    columns=$1
    secondary_panes=0
  else
    columns=$1
    secondary_panes=$2

    # Chop extra secondary panes.
    if [ $secondary_panes -gt $columns ]; then
      secondary_panes=$columns
    fi
  fi

  # Create all necessary columns then even out the spacing.
  for column in $(seq 2 $columns); do
    tmux split-pane -h > /dev/null 2>&1

    # If tmux can't create a new pane, revise the columns count and update
    # the secondary_panes count if necessary.
    if [ $? -ne 0 ]; then
      columns=$column
      if [ $secondary_panes -ge $columns ]; then
        secondary_panes=`expr $columns - 1`
      fi
      break
    fi
  done
  tmux select-layout even-horizontal

  # Create secondary panes starting from right to left.
  for secondary_pane in $(seq 1 $secondary_panes); do
    tmux split-pane -v
    tmux select-pane -L
  done

  # Reset the focus to the original pane.
  tmux select-pane -t 0
}

paper() {
  if [ $# -lt 1 ]; then
    printf "\033[31ma note name is required\n\033[0m"
    return 1
  fi

  note_name=$1
  if [ ! -f "$NOTES_DIR/$note_name.paper" ]; then
    printf "\033[31m$note_name does not exist in the notes directory\n\033[0m"
    return 1
  fi

  parse_command="import json; import sys; print(json.load(sys.stdin)['url'])"
  url=$(cat "$NOTES_DIR/$note_name.paper" | python3 -c "$parse_command" 2>/dev/null)
  if [ $? -ne 0 ]; then
    printf "\033[31mcould not parse URL from $note_name\n\033[0m"
    return 1
  fi

  firefox "$url"
}
